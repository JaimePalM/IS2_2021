package practica3;

import java.util.TimerTask;

/**
 * Clase del estado Programado, en el que al menos hay una alarma activada.
 * @author Jes√∫s y Jaime
 *
 */
public class Programado extends ControladorAlarmaState {

	public void entryAction(ControladorAlarma context) {
		if (context.alarmasActivadas().isEmpty()) {
			ControladorAlarmaState estadoDesprogramado = getEstadoDesprogramado();
			context.setState(estadoDesprogramado);
		}
	}

	public void alarmaOff(ControladorAlarma context) {
		ControladorAlarmaState estadoProgramado = getEstadoProgramado();
		context.setState(estadoProgramado);
		estadoProgramado.entryAction(context);
	}
	
	public void borraAlarma(ControladorAlarma context) {
		ControladorAlarmaState estadoProgramado = getEstadoProgramado();
		context.setState(estadoProgramado);
		estadoProgramado.entryAction(context);
	}
	
	// Clase de hacer sonar la alarma mas proxima
	public class ApagaAlarmaTask extends TimerTask {
		private ControladorAlarma context;
		public ApagaAlarmaTask(ControladorAlarma c) {
			context = c;
		}
		public void run() {
			ControladorAlarmaState estadoProgramado = getEstadoProgramado();
			getEstadoSonando().exitAction(context);
			context.setState(estadoProgramado);
			estadoProgramado.entryAction(context);
			estadoProgramado.doAction(context);
		}
	}
	
	/*
	public void nuevaAlarma(ControladorAlarma context) {
		ControladorAlarmaState estadoProgramado = getEstadoProgramado();
		context.setState(estadoProgramado);
		estadoProgramado.entryAction(context);
	}
	
	public void alarmaOn(ControladorAlarma context) {
		ControladorAlarmaState estadoProgramado = getEstadoProgramado();
		context.setState(estadoProgramado);
		estadoProgramado.entryAction(context);
	}
	*/	
	
}